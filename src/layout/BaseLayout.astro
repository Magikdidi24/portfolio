--- 
const { title } = Astro.props; 

---
<!DOCTYPE html>
<html lang="fr" class="dark:text-green-400 text-green-600">
  <head>
    <meta charset="utf-8" />
    <title>{title} – Mon Portfolio</title>
    <link rel="icon" href="/favicon.ico" />
    <style>
      #matrix-canvas {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
        background: black;
      }
    </style>
  </head>
  <body class="font-sans antialiased">
    <canvas id="matrix-canvas"></canvas>
    
    <header class="relative max-w-4xl mx-auto p-6 flex justify-between items-center">
      <h1 id="portfolio-title" class="text-3xl font-bold">Mon Portfolio</h1>
    </header>
    
    <main class="relative prose prose-lg max-w-4xl mx-auto">
      <slot/>
    </main>
    
    <script type="module">
      const canvas = document.getElementById('matrix-canvas');
      const ctx = canvas.getContext('2d');
      canvas.width = innerWidth;
      canvas.height = innerHeight;
      window.addEventListener('resize', () => {
        canvas.width = innerWidth;
        canvas.height = innerHeight;
      });
      
      const letters = 'アァカサタナハマヤャラワガザダバパイィキシチニヒミリヰギジヂビピウゥクスツヌフムユュルグズヅブプエェケセテネヘメレヱゲゼデベペオォコソトノホモヨョロゴゾドボポヴン';
      const fontSize = 16;
      const columns = Math.floor(canvas.width / fontSize);
      const drops = Array(columns).fill(0);
      
      function draw() {
        ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';
        ctx.fillRect(0, 0, canvas.width, canvas.height);
        
        ctx.fillStyle = '#0f0';
        ctx.font = fontSize + 'px monospace';
        
        for (let i = 0; i < drops.length; i++) {
          const text = letters.charAt(Math.floor(Math.random() * letters.length));
          const x = i * fontSize;
          const y = drops[i] * fontSize;
          ctx.fillText(text, x, y);
          
          if (y > canvas.height && Math.random() > 0.975) {
            drops[i] = 0;
          }
          drops[i]++;
        }
        setTimeout(draw, 60);
      }
      draw();

      const portfolioTitle = document.getElementById('portfolio-title');
      const originalText = portfolioTitle.textContent;
      let interval;

      function matrixEffect() {
        let iteration = 0;
        let currentText = originalText;
        clearInterval(interval);
        
        interval = setInterval(() => {
          portfolioTitle.textContent = currentText
            .split('')
            .map((letter, index) => {
              if (index < iteration) {
                return originalText[index];
              }
              return letters[Math.floor(Math.random() * letters.length)];
            })
            .join('');
          
          if (iteration >= originalText.length) {
            clearInterval(interval);
            setTimeout(matrixEffect, 5000);
          }
          
          iteration += 1 / 4;
        }, 30);
      }

      setTimeout(matrixEffect, 500);
    </script>
  </body>
</html>